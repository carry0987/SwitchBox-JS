!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):(e="undefined"!=typeof globalThis?globalThis:e||self).SwitchBox=t()}(this,(function(){"use strict";function e(e){throw new Error(e)}function t(e,t,i){if("string"!=typeof e)return e;let n=document;return null===t&&i?n=i:t&&t instanceof Node&&"querySelector"in t?n=t:i&&i instanceof Node&&"querySelector"in i&&(n=i),"all"===t?n.querySelectorAll(e):n.querySelector(e)}function i(e,t={},i=""){let n=document.createElement(e);for(let e in t)Object.prototype.hasOwnProperty.call(t,e)&&("textContent"===e||"innerText"===e?n.textContent=t[e]:n.setAttribute(e,t[e]));return i&&(n.textContent=i),n}let n="utils-style";const s={from:".utils",to:".utils-"};function o(e,...t){if(!t.length)return e;const i=t.shift();if(i)for(const t in i)if(Object.prototype.hasOwnProperty.call(i,t)){const s=i[t],l=t;"object"!=typeof(n=s)||null===n||Array.isArray(n)?e[l]=s:(e[l]&&"object"==typeof e[l]||(e[l]={}),o(e[l],s))}var n;return o(e,...t)}function l(e){n=e}function a(e,t){s.from=e,s.to=t}function c(e,t=null){t=u(t)?"":t;let s=i("style");s.id=n+t,s.textContent="",document.head.append(s);let o=s.sheet;for(let i in e)e.hasOwnProperty(i)&&r(o,i,h(e[i]),t)}function h(e){let t="";for(let[i,n]of Object.entries(e))i=i.replace(/([A-Z])/g,(e=>`-${e[0].toLowerCase()}`)),t+=`${i}:${n};`;return t}function r(e,t,i,n=null){n=u(n)?"":n;let o=t.replace(s.from,s.to+n);e.insertRule(o+"{"+i+"}",0)}function d(e=null){const i=u(e)?"":e;let s=t("#"+n+i);s&&s.parentNode&&s.parentNode.removeChild(s)}function u(e){return"number"!=typeof e&&(!e||"string"==typeof e&&0===e.length)}function b(e=8){return Math.random().toString(36).substring(2,2+e)}class p{static setStylesheetId=l;static setReplaceRule=a;static isEmpty=u;static deepMerge=o;static generateRandom=b;static injectStylesheet=c;static removeStylesheet=d;static getElem=t;static createElem=i;static throwError=e;static getTemplate=function(e,t){return`\n        <div class="switch-box switch-box-${e=e.toString()}">\n            <div class="switch switch-${t}">\n                <span class="switch-style switch-trigger"></span>\n            </div>\n            <label class="switch-title"></label>\n        </div>\n        `};static handleSwitchboxTitle(e,t){let i,n=e.title||e.dataset.switchboxTitle||null,s=!1,o=null,l=!1;if(t instanceof HTMLLabelElement){const a=t.htmlFor,c=t.dataset.switchFor,h=e.dataset.switchId;s=!u(e.id)&&a===e.id,l=!u(e.id)&&c===e.id,l||u(e.name)||(l=!u(c)&&c===e.name),u(h)||c!==h||(o=u(e.id)&&u(a)?"switch-"+b(6):null,l=!0),(l||s)&&(i=t.cloneNode(!0),n=n||t.textContent,t.parentNode?.removeChild(t))}return{title:n,remainLabel:s,randomID:o,labelToRestore:i}}static insertSwitchbox(e,n,s,o,l){let a=p.getTemplate(e,n),c=i("div");c.innerHTML=a.trim();let h=t(".switch",c),r=t(".switch-trigger",c),d=t("label",c),u=s.cloneNode(!0);return u.withID=!0,o&&(u.id=o,u.withID=!1),!0===l&&(d.htmlFor=u.id),r.addEventListener("click",(e=>{e.preventDefault(),u.click()})),h.insertBefore(u,h.firstChild),s.parentNode.replaceChild(c.firstElementChild||c,s),{cloneEle:u,templateNode:c,labelNode:d}}static insertSwitchboxTitle(e,t,i,n){e?(i.textContent=e,!0===t&&(i.classList.add("switch-box-labeled"),i.addEventListener("click",(e=>{e.preventDefault(),n.click()})))):i.parentNode.removeChild(i)}static toggleCheckStatus(e,t){t?(e.checked=!0,e.setAttribute("checked","checked")):(e.checked=!1,e.removeAttribute("checked"))}static toggleDisableStatus(e,t){t?(e.disabled=!0,e.setAttribute("disabled","disabled")):(e.disabled=!1,e.removeAttribute("disabled"))}static restoreElement(e){if("function"==typeof e.switchBoxChange&&e.removeEventListener("change",e.switchBoxChange),!1===e.withID&&e.removeAttribute("id"),e.switchBoxChange=void 0,e.removeAttribute("data-switchbox"),e.parentNode&&e.parentNode.parentNode){let t=e.parentNode;t=t.parentNode,t.replaceWith(e)}let t=e.labelToRestore;t&&t.nodeType===Node.ELEMENT_NODE&&e.parentNode?.insertBefore(t,e.nextSibling)}}p.setStylesheetId("switchbox-style"),p.setReplaceRule(".switch-box",".switch-box-");const g={title:null,bindLabel:!0,checked:!1,checkedByValue:null,disabled:!1,disabledByValue:null,styles:{},theme:"blue",onLoad:void 0,onChecked:void 0,onUnchecked:void 0,onChange:void 0};class f{static instances=[];static version="2.0.3";static firstLoad=!0;length=0;options=g;id=0;allElement=[];onLoadCallback;onCheckedCallback;onUncheckedCallback;onChangeCallback;constructor(e,t){this.init(e,t,f.instances.length),f.instances.push(this),1===f.instances.length&&!0===f.firstLoad&&((e,t=!1)=>{!0===t?console.log("Data Type : "+typeof e,"\nValue : "+e):"boolean"!=typeof t?console.log(t):console.log(e)})(`SwitchBox is loaded, version: ${f.version}`),f.firstLoad=!1}init(e,t,i){let n=p.getElem(e,"all");return(!n||n.length<1)&&p.throwError("Cannot find elements : "+e),this.length=n.length,this.id=i,this.options=p.deepMerge({},g,t),this.injectStyles(),this.setupCallbacks(),n.forEach(((e,t)=>this.processSwitchbox(e,t))),this.onLoadCallback?.(this),this}injectStyles(){let e={};this.options?.styles&&Object.keys(this.options.styles).length>0&&(e=p.deepMerge({},this.options.styles,e)),e&&p.injectStylesheet(e,this.id.toString())}setupCallbacks(){this.onChange=(e,t)=>{this.options?.onChange&&this.options.onChange(e,t)},this.onChecked=e=>{this.options?.onChecked&&this.options.onChecked(e)},this.onUnchecked=e=>{this.options?.onUnchecked&&this.options.onUnchecked(e)},this.onLoadCallback=this.options?.onLoad}processSwitchbox(e,t){if("checkbox"!==e.type)return;if(e.hasAttribute("data-switchbox"))return;e.setAttribute("data-switchbox","true");let i=e.nextElementSibling,n=this.options.bindLabel??!1,{title:s,remainLabel:o,randomID:l,labelToRestore:a}=p.handleSwitchboxTitle(e,i);n=!!o||n,1===this.length&&(s=s||this.options.title||null),e.checked?p.toggleCheckStatus(e,!0):(this.options.checkedByValue&&Array.isArray(this.options.checkedByValue)&&this.options.checkedByValue.includes(e.value)&&p.toggleCheckStatus(e,!0),this.options.checked&&this.updateSwitchboxCheckedStatus(e,t)),e.disabled?p.toggleDisableStatus(e,!0):(this.options.disabledByValue&&Array.isArray(this.options.disabledByValue)&&this.options.disabledByValue.includes(e.value)&&p.toggleDisableStatus(e,!0),this.options.disabled&&this.updateSwitchboxDisabledStatus(e,t));let{cloneEle:c,labelNode:h}=p.insertSwitchbox(this.id.toString(),this.options.theme,e,l,o);p.insertSwitchboxTitle(s,n,h,c);let r=this.switchBoxChange.bind(this,c);c.addEventListener("change",r),c.switchBoxChange=r,this.allElement.push(c),c.labelToRestore=a}updateSwitchboxCheckedStatus(e,t){const i=this.options.checked;(!0===i&&1===this.length||"string"==typeof i&&e.value===i||"number"==typeof i&&t===i||Array.isArray(i)&&(i.includes(e.name)||i.includes(e.id)))&&p.toggleCheckStatus(e,!0)}updateSwitchboxDisabledStatus(e,t){const i=this.options.disabled;(!0===i&&1===this.length||"string"==typeof i&&e.value===i||"number"==typeof i&&t===i||Array.isArray(i)&&(i.includes(e.name)||i.includes(e.id)))&&p.toggleDisableStatus(e,!0)}switchBoxChange(e){p.toggleCheckStatus(e,e.checked),this.onChangeCallback?.(e,e.checked),e.checked?this.onCheckedCallback?.(e):this.onUncheckedCallback?.(e)}destroy(){f.firstLoad=!1,this.allElement.forEach((e=>{p.restoreElement(e)})),this.length=0,this.options=g,this.allElement=[],p.removeStylesheet(this.id.toString());const e=f.instances.indexOf(this);-1!==e&&f.instances.splice(e,1)}set onChange(e){this.onChangeCallback=e}set onChecked(e){this.onCheckedCallback=e}set onUnchecked(e){this.onUncheckedCallback=e}get elements(){return this.allElement}static destroyAll(){for(;f.instances.length;){f.instances[0].destroy()}}}return f}));
